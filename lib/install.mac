#!/bin/bash

run_preinstall() {

    # Before relying on Homebrew, check that packages can be compiled
    if ! type_exists 'gcc'; then
        e_error "The XCode Command Line Tools must be installed first."
        printf "  Download them from: https://developer.apple.com/downloads\n"
        printf "  Then run: bash ~/.dotfiles/bin/dotfiles\n"
        exit 1
    fi

    # Check for Homebrew
    if ! type_exists 'brew'; then
        e_header "Installing Homebrew..."
        ruby -e "$(curl -fsSkL raw.github.com/mxcl/homebrew/go)"
    fi

    # Check for git
    if ! type_exists 'git'; then
        e_header "Updating Homebrew..."
        brew update
        e_header "Installing Git..."
        brew install git
    fi

}

run_install() {

    # Check for Homebrew
    if type_exists 'brew'; then
        e_header "Updating Homebrew..."
        # Use the latest version of Homebrew
        brew update
        [[ $? ]] && e_success "Done"

        e_header "Updating any existing Homebrew formulae..."
        # Upgrade any already-installed formulae
        brew upgrade
        [[ $? ]] && e_success "Done"

        e_header "Checking status of desired Homebrew formulae..."
        local list_formulae
        local -a missing_formulae
        local -a desired_formulae=(
            'coreutils' # GNU core utilities (those that come with OS X are outdated)
            'rsync'
            'git'
            'bash'
            'bash-completion'
            'node'
        )

        for index in ${!desired_formulae[*]}
        do
            if ! formula_exists ${desired_formulae[$index]}; then
                # Store the name (and options) of every missing formula
                missing_formulae=("${missing_formulae[@]}" "${desired_formulae[$index]}")
            fi
        done

        if [[ "$missing_formulae" ]]; then
            # Convert the array of missing formula into a list of space-separate strings
            list_formulae=$( printf "%s " "${missing_formulae[@]}" )

            e_header "Installing missing Homebrew formulae..."
            # Install all missing formulae
            brew install $list_formulae
        fi
        [[ $? ]] && e_success "Done"

        # Remove outdated versions from the Cellar
        e_header "Homebrew cleanup..."
        brew cleanup
        [[ $? ]] && e_success "Done"

    else
        printf "\n"
        e_error "Error: Homebrew not found."
        printf "Aborting...\n"
        exit
    fi

}

run_postinstall() {

    # Ask before potentially overwriting OS X defaults
    seek_confirmation "Warning: This step may modify your OS X system defaults."

    if is_confirmed; then
        bash ./bin/osxdefaults
        e_success "OS X settings updated! You may need to restart."
    else
        printf "Skipped OS X settings update.\n"
    fi

}
